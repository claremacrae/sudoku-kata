
Final look of the solved board:
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|594|268|731|
|817|395|264|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+

Starting look of the board to solve:
+---+---+---+
|.52|.37|..8|
|...|..9|...|
|1..|6..|.92|
+---+---+---+
|...|...|73.|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.2.|
|42.|...|.7.|
+---+---+---+

================================================================================

(8, 9) can only contain 3.
+---+---+---+
|.52|.37|..8|
|...|..9|...|
|1..|6..|.92|
+---+---+---+
|...|...|73.|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.23|
|42.|...|.7.|
+---+---+---+
Code: 052037008000009000100600092000000730017090004003401000039000015000916023420000070

(1, 4) can only contain 1.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|1..|6..|.92|
+---+---+---+
|...|...|73.|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.23|
|42.|...|.7.|
+---+---+---+
Code: 052137008000009000100600092000000730017090004003401000039000015000916023420000070

Block (3, 1) can contain 1 only at (9, 3).
+---+---+---+
|.52|137|..8|
|...|..9|...|
|1..|6..|.92|
+---+---+---+
|...|...|73.|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.23|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000100600092000000730017090004003401000039000015000916023421000070

Block (2, 3) can contain 1 only at (4, 9).
+---+---+---+
|.52|137|..8|
|...|..9|...|
|1..|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.23|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000100600092000000731017090004003401000039000015000916023421000070

Row #3 can contain 7 only at (3, 2).
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|...|916|.23|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000039000015000916023421000070

(8, 2) can only contain 8.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|.8.|916|.23|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000039000015080916023421000070

(8, 7) can only contain 4.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|.8.|916|423|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000039000015080916423421000070

(8, 3) can only contain 5.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|.85|916|423|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000039000015085916423421000070

(8, 1) can only contain 7.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|.39|...|.15|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000039000015785916423421000070

(7, 1) can only contain 6.
+---+---+---+
|.52|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|.15|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 052137008000009000170600092000000731017090004003401000639000015785916423421000070

(1, 1) can only contain 9.
+---+---+---+
|952|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|.15|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137008000009000170600092000000731017090004003401000639000015785916423421000070

(7, 7) can only contain 8.
+---+---+---+
|952|137|..8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137008000009000170600092000000731017090004003401000639000815785916423421000070

(1, 7) can only contain 6.
+---+---+---+
|952|137|6.8|
|...|..9|...|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137608000009000170600092000000731017090004003401000639000815785916423421000070

(2, 9) can only contain 7.
+---+---+---+
|952|137|6.8|
|...|..9|..7|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137608000009007170600092000000731017090004003401000639000815785916423421000070

(1, 8) can only contain 4.
+---+---+---+
|952|137|648|
|...|..9|..7|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137648000009007170600092000000731017090004003401000639000815785916423421000070

(2, 8) can only contain 5.
+---+---+---+
|952|137|648|
|...|..9|.57|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|.7.|
+---+---+---+
Code: 952137648000009057170600092000000731017090004003401000639000815785916423421000070

(9, 7) can only contain 9.
+---+---+---+
|952|137|648|
|...|..9|.57|
|17.|6..|.92|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|97.|
+---+---+---+
Code: 952137648000009057170600092000000731017090004003401000639000815785916423421000970

(3, 7) can only contain 3.
+---+---+---+
|952|137|648|
|...|..9|.57|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|97.|
+---+---+---+
Code: 952137648000009057170600392000000731017090004003401000639000815785916423421000970

(9, 9) can only contain 6.
+---+---+---+
|952|137|648|
|...|..9|.57|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|...|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648000009057170600392000000731017090004003401000639000815785916423421000976

(6, 9) can only contain 9.
+---+---+---+
|952|137|648|
|...|..9|.57|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648000009057170600392000000731017090004003401009639000815785916423421000976

(2, 7) can only contain 1.
+---+---+---+
|952|137|648|
|...|..9|157|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|..3|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648000009157170600392000000731017090004003401009639000815785916423421000976

(6, 2) can only contain 6.
+---+---+---+
|952|137|648|
|...|..9|157|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|.63|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648000009157170600392000000731017090004063401009639000815785916423421000976

(2, 2) can only contain 4.
+---+---+---+
|952|137|648|
|.4.|..9|157|
|17.|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|.63|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648040009157170600392000000731017090004063401009639000815785916423421000976

(3, 3) can only contain 8.
+---+---+---+
|952|137|648|
|.4.|..9|157|
|178|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|.63|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648040009157178600392000000731017090004063401009639000815785916423421000976

(2, 1) can only contain 3.
+---+---+---+
|952|137|648|
|34.|..9|157|
|178|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|.63|4.1|..9|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648340009157178600392000000731017090004063401009639000815785916423421000976

(6, 8) can only contain 8.
+---+---+---+
|952|137|648|
|34.|..9|157|
|178|6..|392|
+---+---+---+
|...|...|731|
|.17|.9.|..4|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648340009157178600392000000731017090004063401089639000815785916423421000976

(4, 3) can only contain 4.
+---+---+---+
|952|137|648|
|34.|..9|157|
|178|6..|392|
+---+---+---+
|..4|...|731|
|.17|.9.|..4|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648340009157178600392004000731017090004063401089639000815785916423421000976

(5, 8) can only contain 6.
+---+---+---+
|952|137|648|
|34.|..9|157|
|178|6..|392|
+---+---+---+
|..4|...|731|
|.17|.9.|.64|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648340009157178600392004000731017090064063401089639000815785916423421000976

(2, 3) can only contain 6.
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|..4|...|731|
|.17|.9.|.64|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392004000731017090064063401089639000815785916423421000976

(4, 2) can only contain 9.
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|.94|...|731|
|.17|.9.|.64|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392094000731017090064063401089639000815785916423421000976

Block (2, 2) can contain 6 only at (4, 5).
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|4.1|.89|
+---+---+---+
|639|...|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392094060731017090064063401089639000815785916423421000976

Column #4 can contain 7 only at (7, 4).
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|4.1|.89|
+---+---+---+
|639|7..|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392094060731017090064063401089639700815785916423421000976

Block (2, 2) can contain 7 only at (6, 5).
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|7..|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392094060731017090064063471089639700815785916423421000976


---------------------

{ Mask = 10, Description = row #7, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 6, Description: row #7, Index: 54, Row: 6, Column: 0
      Discriminator: 6, Description: row #7, Index: 55, Row: 6, Column: 1
      Discriminator: 6, Description: row #7, Index: 56, Row: 6, Column: 2
      Discriminator: 6, Description: row #7, Index: 57, Row: 6, Column: 3
      Discriminator: 6, Description: row #7, Index: 58, Row: 6, Column: 4
      Discriminator: 6, Description: row #7, Index: 59, Row: 6, Column: 5
      Discriminator: 6, Description: row #7, Index: 60, Row: 6, Column: 6
      Discriminator: 6, Description: row #7, Index: 61, Row: 6, Column: 7
      Discriminator: 6, Description: row #7, Index: 62, Row: 6, Column: 8
   CellsWithMask:
      Discriminator: 6, Description: row #7, Index: 58, Row: 6, Column: 4
      Discriminator: 6, Description: row #7, Index: 59, Row: 6, Column: 5
}
{ Mask = 10, Description = block (3, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 25, Description: block (3, 2), Index: 57, Row: 6, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 66, Row: 7, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 67, Row: 7, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 68, Row: 7, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
}
{ Mask = 18, Description = row #6, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 46, Row: 5, Column: 1
      Discriminator: 5, Description: row #6, Index: 47, Row: 5, Column: 2
      Discriminator: 5, Description: row #6, Index: 48, Row: 5, Column: 3
      Discriminator: 5, Description: row #6, Index: 49, Row: 5, Column: 4
      Discriminator: 5, Description: row #6, Index: 50, Row: 5, Column: 5
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
      Discriminator: 5, Description: row #6, Index: 52, Row: 5, Column: 7
      Discriminator: 5, Description: row #6, Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = column #7, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 15, Description: column #7, Index: 6, Row: 0, Column: 6
      Discriminator: 15, Description: column #7, Index: 15, Row: 1, Column: 6
      Discriminator: 15, Description: column #7, Index: 24, Row: 2, Column: 6
      Discriminator: 15, Description: column #7, Index: 33, Row: 3, Column: 6
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
      Discriminator: 15, Description: column #7, Index: 60, Row: 6, Column: 6
      Discriminator: 15, Description: column #7, Index: 69, Row: 7, Column: 6
      Discriminator: 15, Description: column #7, Index: 78, Row: 8, Column: 6
   CellsWithMask:
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = block (2, 3), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 23, Description: block (2, 3), Index: 33, Row: 3, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 34, Row: 3, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 35, Row: 3, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 43, Row: 4, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 44, Row: 4, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 52, Row: 5, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
}
{ Mask = 24, Description = row #3, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 2, Description: row #3, Index: 18, Row: 2, Column: 0
      Discriminator: 2, Description: row #3, Index: 19, Row: 2, Column: 1
      Discriminator: 2, Description: row #3, Index: 20, Row: 2, Column: 2
      Discriminator: 2, Description: row #3, Index: 21, Row: 2, Column: 3
      Discriminator: 2, Description: row #3, Index: 22, Row: 2, Column: 4
      Discriminator: 2, Description: row #3, Index: 23, Row: 2, Column: 5
      Discriminator: 2, Description: row #3, Index: 24, Row: 2, Column: 6
      Discriminator: 2, Description: row #3, Index: 25, Row: 2, Column: 7
      Discriminator: 2, Description: row #3, Index: 26, Row: 2, Column: 8
   CellsWithMask:
      Discriminator: 2, Description: row #3, Index: 22, Row: 2, Column: 4
      Discriminator: 2, Description: row #3, Index: 23, Row: 2, Column: 5
}
{ Mask = 24, Description = block (1, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 19, Description: block (1, 2), Index: 3, Row: 0, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 4, Row: 0, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 5, Row: 0, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 12, Row: 1, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 13, Row: 1, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 14, Row: 1, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 21, Row: 2, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 22, Row: 2, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 23, Row: 2, Column: 5
   CellsWithMask:
      Discriminator: 19, Description: block (1, 2), Index: 22, Row: 2, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 23, Row: 2, Column: 5
}
{ Mask = 130, Description = row #2, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 1, Description: row #2, Index: 9, Row: 1, Column: 0
      Discriminator: 1, Description: row #2, Index: 10, Row: 1, Column: 1
      Discriminator: 1, Description: row #2, Index: 11, Row: 1, Column: 2
      Discriminator: 1, Description: row #2, Index: 12, Row: 1, Column: 3
      Discriminator: 1, Description: row #2, Index: 13, Row: 1, Column: 4
      Discriminator: 1, Description: row #2, Index: 14, Row: 1, Column: 5
      Discriminator: 1, Description: row #2, Index: 15, Row: 1, Column: 6
      Discriminator: 1, Description: row #2, Index: 16, Row: 1, Column: 7
      Discriminator: 1, Description: row #2, Index: 17, Row: 1, Column: 8
   CellsWithMask:
      Discriminator: 1, Description: row #2, Index: 12, Row: 1, Column: 3
      Discriminator: 1, Description: row #2, Index: 13, Row: 1, Column: 4
}
{ Mask = 130, Description = block (1, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 19, Description: block (1, 2), Index: 3, Row: 0, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 4, Row: 0, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 5, Row: 0, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 12, Row: 1, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 13, Row: 1, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 14, Row: 1, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 21, Row: 2, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 22, Row: 2, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 23, Row: 2, Column: 5
   CellsWithMask:
      Discriminator: 19, Description: block (1, 2), Index: 12, Row: 1, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 13, Row: 1, Column: 4
}
{ Mask = 146, Description = row #4, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 28, Row: 3, Column: 1
      Discriminator: 3, Description: row #4, Index: 29, Row: 3, Column: 2
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 31, Row: 3, Column: 4
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
      Discriminator: 3, Description: row #4, Index: 33, Row: 3, Column: 6
      Discriminator: 3, Description: row #4, Index: 34, Row: 3, Column: 7
      Discriminator: 3, Description: row #4, Index: 35, Row: 3, Column: 8
   CellsWithMask:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
}
{ Mask = 146, Description = column #1, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 9, Description: column #1, Index: 0, Row: 0, Column: 0
      Discriminator: 9, Description: column #1, Index: 9, Row: 1, Column: 0
      Discriminator: 9, Description: column #1, Index: 18, Row: 2, Column: 0
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
      Discriminator: 9, Description: column #1, Index: 54, Row: 6, Column: 0
      Discriminator: 9, Description: column #1, Index: 63, Row: 7, Column: 0
      Discriminator: 9, Description: column #1, Index: 72, Row: 8, Column: 0
   CellsWithMask:
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
}
{ Mask = 146, Description = block (2, 1), Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 28, Row: 3, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 29, Row: 3, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 37, Row: 4, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 38, Row: 4, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 46, Row: 5, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 47, Row: 5, Column: 2
   CellsWithMask:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
}
{ Mask = 148, Description = row #9, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 8, Description: row #9, Index: 72, Row: 8, Column: 0
      Discriminator: 8, Description: row #9, Index: 73, Row: 8, Column: 1
      Discriminator: 8, Description: row #9, Index: 74, Row: 8, Column: 2
      Discriminator: 8, Description: row #9, Index: 75, Row: 8, Column: 3
      Discriminator: 8, Description: row #9, Index: 76, Row: 8, Column: 4
      Discriminator: 8, Description: row #9, Index: 77, Row: 8, Column: 5
      Discriminator: 8, Description: row #9, Index: 78, Row: 8, Column: 6
      Discriminator: 8, Description: row #9, Index: 79, Row: 8, Column: 7
      Discriminator: 8, Description: row #9, Index: 80, Row: 8, Column: 8
   CellsWithMask:
      Discriminator: 8, Description: row #9, Index: 75, Row: 8, Column: 3
      Discriminator: 8, Description: row #9, Index: 76, Row: 8, Column: 4
      Discriminator: 8, Description: row #9, Index: 77, Row: 8, Column: 5
}
{ Mask = 148, Description = block (3, 2), Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 25, Description: block (3, 2), Index: 57, Row: 6, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 66, Row: 7, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 67, Row: 7, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 68, Row: 7, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
}
{ Mask = 150, Description = row #5, Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 37, Row: 4, Column: 1
      Discriminator: 4, Description: row #5, Index: 38, Row: 4, Column: 2
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 40, Row: 4, Column: 4
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
      Discriminator: 4, Description: row #5, Index: 43, Row: 4, Column: 7
      Discriminator: 4, Description: row #5, Index: 44, Row: 4, Column: 8
   CellsWithMask:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
}
{ Mask = 150, Description = column #4, Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 12, Description: column #4, Index: 3, Row: 0, Column: 3
      Discriminator: 12, Description: column #4, Index: 12, Row: 1, Column: 3
      Discriminator: 12, Description: column #4, Index: 21, Row: 2, Column: 3
      Discriminator: 12, Description: column #4, Index: 30, Row: 3, Column: 3
      Discriminator: 12, Description: column #4, Index: 39, Row: 4, Column: 3
      Discriminator: 12, Description: column #4, Index: 48, Row: 5, Column: 3
      Discriminator: 12, Description: column #4, Index: 57, Row: 6, Column: 3
      Discriminator: 12, Description: column #4, Index: 66, Row: 7, Column: 3
      Discriminator: 12, Description: column #4, Index: 75, Row: 8, Column: 3
   CellsWithMask:
      Discriminator: 12, Description: column #4, Index: 12, Row: 1, Column: 3
      Discriminator: 12, Description: column #4, Index: 30, Row: 3, Column: 3
      Discriminator: 12, Description: column #4, Index: 39, Row: 4, Column: 3
      Discriminator: 12, Description: column #4, Index: 75, Row: 8, Column: 3
}
{ Mask = 150, Description = block (2, 2), Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 31, Row: 3, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 40, Row: 4, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 48, Row: 5, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 49, Row: 5, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 50, Row: 5, Column: 5
   CellsWithMask:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
}
{ Mask = 154, Description = column #5, Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 13, Description: column #5, Index: 4, Row: 0, Column: 4
      Discriminator: 13, Description: column #5, Index: 13, Row: 1, Column: 4
      Discriminator: 13, Description: column #5, Index: 22, Row: 2, Column: 4
      Discriminator: 13, Description: column #5, Index: 31, Row: 3, Column: 4
      Discriminator: 13, Description: column #5, Index: 40, Row: 4, Column: 4
      Discriminator: 13, Description: column #5, Index: 49, Row: 5, Column: 4
      Discriminator: 13, Description: column #5, Index: 58, Row: 6, Column: 4
      Discriminator: 13, Description: column #5, Index: 67, Row: 7, Column: 4
      Discriminator: 13, Description: column #5, Index: 76, Row: 8, Column: 4
   CellsWithMask:
      Discriminator: 13, Description: column #5, Index: 13, Row: 1, Column: 4
      Discriminator: 13, Description: column #5, Index: 22, Row: 2, Column: 4
      Discriminator: 13, Description: column #5, Index: 58, Row: 6, Column: 4
      Discriminator: 13, Description: column #5, Index: 76, Row: 8, Column: 4
}
{ Mask = 154, Description = block (1, 2), Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 19, Description: block (1, 2), Index: 3, Row: 0, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 4, Row: 0, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 5, Row: 0, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 12, Row: 1, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 13, Row: 1, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 14, Row: 1, Column: 5
      Discriminator: 19, Description: block (1, 2), Index: 21, Row: 2, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 22, Row: 2, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 23, Row: 2, Column: 5
   CellsWithMask:
      Discriminator: 19, Description: block (1, 2), Index: 12, Row: 1, Column: 3
      Discriminator: 19, Description: block (1, 2), Index: 13, Row: 1, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 22, Row: 2, Column: 4
      Discriminator: 19, Description: block (1, 2), Index: 23, Row: 2, Column: 5
}
{ Mask = 158, Description = column #6, Cells = 9, CellsWithMask = 5, CleanableCellsCount = 0
   Cells:
      Discriminator: 14, Description: column #6, Index: 5, Row: 0, Column: 5
      Discriminator: 14, Description: column #6, Index: 14, Row: 1, Column: 5
      Discriminator: 14, Description: column #6, Index: 23, Row: 2, Column: 5
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 50, Row: 5, Column: 5
      Discriminator: 14, Description: column #6, Index: 59, Row: 6, Column: 5
      Discriminator: 14, Description: column #6, Index: 68, Row: 7, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 14, Description: column #6, Index: 23, Row: 2, Column: 5
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 59, Row: 6, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
}
{ Mask = 158, Description = block (3, 2), Cells = 9, CellsWithMask = 5, CleanableCellsCount = 0
   Cells:
      Discriminator: 25, Description: block (3, 2), Index: 57, Row: 6, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 66, Row: 7, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 67, Row: 7, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 68, Row: 7, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
}

---------------------

Guessing that 2 and 4 are arbitrary in row #7 (multiple solutions): Pick 4->(7, 5), 2->(7, 6).
+---+---+---+
|952|137|648|
|346|..9|157|
|178|6..|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178600392094060731017090064063471089639742815785916423421000976

(3, 5) can only contain 5.
+---+---+---+
|952|137|648|
|346|..9|157|
|178|65.|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178650392094060731017090064063471089639742815785916423421000976

(3, 6) can only contain 4.
+---+---+---+
|952|137|648|
|346|..9|157|
|178|654|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|...|976|
+---+---+---+
Code: 952137648346009157178654392094060731017090064063471089639742815785916423421000976

(9, 5) can only contain 8.
+---+---+---+
|952|137|648|
|346|..9|157|
|178|654|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|.8.|976|
+---+---+---+
Code: 952137648346009157178654392094060731017090064063471089639742815785916423421080976

(2, 5) can only contain 2.
+---+---+---+
|952|137|648|
|346|.29|157|
|178|654|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|.8.|976|
+---+---+---+
Code: 952137648346029157178654392094060731017090064063471089639742815785916423421080976

(2, 4) can only contain 8.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|.8.|976|
+---+---+---+
Code: 952137648346829157178654392094060731017090064063471089639742815785916423421080976


---------------------

{ Mask = 18, Description = row #6, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 46, Row: 5, Column: 1
      Discriminator: 5, Description: row #6, Index: 47, Row: 5, Column: 2
      Discriminator: 5, Description: row #6, Index: 48, Row: 5, Column: 3
      Discriminator: 5, Description: row #6, Index: 49, Row: 5, Column: 4
      Discriminator: 5, Description: row #6, Index: 50, Row: 5, Column: 5
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
      Discriminator: 5, Description: row #6, Index: 52, Row: 5, Column: 7
      Discriminator: 5, Description: row #6, Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = column #7, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 15, Description: column #7, Index: 6, Row: 0, Column: 6
      Discriminator: 15, Description: column #7, Index: 15, Row: 1, Column: 6
      Discriminator: 15, Description: column #7, Index: 24, Row: 2, Column: 6
      Discriminator: 15, Description: column #7, Index: 33, Row: 3, Column: 6
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
      Discriminator: 15, Description: column #7, Index: 60, Row: 6, Column: 6
      Discriminator: 15, Description: column #7, Index: 69, Row: 7, Column: 6
      Discriminator: 15, Description: column #7, Index: 78, Row: 8, Column: 6
   CellsWithMask:
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = block (2, 3), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 23, Description: block (2, 3), Index: 33, Row: 3, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 34, Row: 3, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 35, Row: 3, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 43, Row: 4, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 44, Row: 4, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 52, Row: 5, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
}
{ Mask = 20, Description = row #9, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 8, Description: row #9, Index: 72, Row: 8, Column: 0
      Discriminator: 8, Description: row #9, Index: 73, Row: 8, Column: 1
      Discriminator: 8, Description: row #9, Index: 74, Row: 8, Column: 2
      Discriminator: 8, Description: row #9, Index: 75, Row: 8, Column: 3
      Discriminator: 8, Description: row #9, Index: 76, Row: 8, Column: 4
      Discriminator: 8, Description: row #9, Index: 77, Row: 8, Column: 5
      Discriminator: 8, Description: row #9, Index: 78, Row: 8, Column: 6
      Discriminator: 8, Description: row #9, Index: 79, Row: 8, Column: 7
      Discriminator: 8, Description: row #9, Index: 80, Row: 8, Column: 8
   CellsWithMask:
      Discriminator: 8, Description: row #9, Index: 75, Row: 8, Column: 3
      Discriminator: 8, Description: row #9, Index: 77, Row: 8, Column: 5
}
{ Mask = 20, Description = block (3, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 25, Description: block (3, 2), Index: 57, Row: 6, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 58, Row: 6, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 59, Row: 6, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 66, Row: 7, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 67, Row: 7, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 68, Row: 7, Column: 5
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 76, Row: 8, Column: 4
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 25, Description: block (3, 2), Index: 75, Row: 8, Column: 3
      Discriminator: 25, Description: block (3, 2), Index: 77, Row: 8, Column: 5
}
{ Mask = 22, Description = column #4, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 12, Description: column #4, Index: 3, Row: 0, Column: 3
      Discriminator: 12, Description: column #4, Index: 12, Row: 1, Column: 3
      Discriminator: 12, Description: column #4, Index: 21, Row: 2, Column: 3
      Discriminator: 12, Description: column #4, Index: 30, Row: 3, Column: 3
      Discriminator: 12, Description: column #4, Index: 39, Row: 4, Column: 3
      Discriminator: 12, Description: column #4, Index: 48, Row: 5, Column: 3
      Discriminator: 12, Description: column #4, Index: 57, Row: 6, Column: 3
      Discriminator: 12, Description: column #4, Index: 66, Row: 7, Column: 3
      Discriminator: 12, Description: column #4, Index: 75, Row: 8, Column: 3
   CellsWithMask:
      Discriminator: 12, Description: column #4, Index: 30, Row: 3, Column: 3
      Discriminator: 12, Description: column #4, Index: 39, Row: 4, Column: 3
      Discriminator: 12, Description: column #4, Index: 75, Row: 8, Column: 3
}
{ Mask = 146, Description = row #4, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 28, Row: 3, Column: 1
      Discriminator: 3, Description: row #4, Index: 29, Row: 3, Column: 2
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 31, Row: 3, Column: 4
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
      Discriminator: 3, Description: row #4, Index: 33, Row: 3, Column: 6
      Discriminator: 3, Description: row #4, Index: 34, Row: 3, Column: 7
      Discriminator: 3, Description: row #4, Index: 35, Row: 3, Column: 8
   CellsWithMask:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
}
{ Mask = 146, Description = column #1, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 9, Description: column #1, Index: 0, Row: 0, Column: 0
      Discriminator: 9, Description: column #1, Index: 9, Row: 1, Column: 0
      Discriminator: 9, Description: column #1, Index: 18, Row: 2, Column: 0
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
      Discriminator: 9, Description: column #1, Index: 54, Row: 6, Column: 0
      Discriminator: 9, Description: column #1, Index: 63, Row: 7, Column: 0
      Discriminator: 9, Description: column #1, Index: 72, Row: 8, Column: 0
   CellsWithMask:
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
}
{ Mask = 146, Description = block (2, 1), Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 28, Row: 3, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 29, Row: 3, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 37, Row: 4, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 38, Row: 4, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 46, Row: 5, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 47, Row: 5, Column: 2
   CellsWithMask:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
}
{ Mask = 148, Description = column #6, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 14, Description: column #6, Index: 5, Row: 0, Column: 5
      Discriminator: 14, Description: column #6, Index: 14, Row: 1, Column: 5
      Discriminator: 14, Description: column #6, Index: 23, Row: 2, Column: 5
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 50, Row: 5, Column: 5
      Discriminator: 14, Description: column #6, Index: 59, Row: 6, Column: 5
      Discriminator: 14, Description: column #6, Index: 68, Row: 7, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
}
{ Mask = 150, Description = row #5, Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 37, Row: 4, Column: 1
      Discriminator: 4, Description: row #5, Index: 38, Row: 4, Column: 2
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 40, Row: 4, Column: 4
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
      Discriminator: 4, Description: row #5, Index: 43, Row: 4, Column: 7
      Discriminator: 4, Description: row #5, Index: 44, Row: 4, Column: 8
   CellsWithMask:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
}
{ Mask = 150, Description = block (2, 2), Cells = 9, CellsWithMask = 4, CleanableCellsCount = 0
   Cells:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 31, Row: 3, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 40, Row: 4, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 48, Row: 5, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 49, Row: 5, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 50, Row: 5, Column: 5
   CellsWithMask:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
}

---------------------

Guessing that 3 and 5 are arbitrary in row #9 (multiple solutions): Pick 5->(9, 4), 3->(9, 6).
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|.6.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094060731017090064063471089639742815785916423421583976

(4, 4) can only contain 2.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|26.|731|
|.17|.9.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094260731017090064063471089639742815785916423421583976

(5, 4) can only contain 3.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|26.|731|
|.17|39.|.64|
|.63|471|.89|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094260731017390064063471089639742815785916423421583976


---------------------

{ Mask = 18, Description = row #6, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 46, Row: 5, Column: 1
      Discriminator: 5, Description: row #6, Index: 47, Row: 5, Column: 2
      Discriminator: 5, Description: row #6, Index: 48, Row: 5, Column: 3
      Discriminator: 5, Description: row #6, Index: 49, Row: 5, Column: 4
      Discriminator: 5, Description: row #6, Index: 50, Row: 5, Column: 5
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
      Discriminator: 5, Description: row #6, Index: 52, Row: 5, Column: 7
      Discriminator: 5, Description: row #6, Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 5, Description: row #6, Index: 45, Row: 5, Column: 0
      Discriminator: 5, Description: row #6, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = column #7, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 15, Description: column #7, Index: 6, Row: 0, Column: 6
      Discriminator: 15, Description: column #7, Index: 15, Row: 1, Column: 6
      Discriminator: 15, Description: column #7, Index: 24, Row: 2, Column: 6
      Discriminator: 15, Description: column #7, Index: 33, Row: 3, Column: 6
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
      Discriminator: 15, Description: column #7, Index: 60, Row: 6, Column: 6
      Discriminator: 15, Description: column #7, Index: 69, Row: 7, Column: 6
      Discriminator: 15, Description: column #7, Index: 78, Row: 8, Column: 6
   CellsWithMask:
      Discriminator: 15, Description: column #7, Index: 42, Row: 4, Column: 6
      Discriminator: 15, Description: column #7, Index: 51, Row: 5, Column: 6
}
{ Mask = 18, Description = block (2, 3), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 23, Description: block (2, 3), Index: 33, Row: 3, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 34, Row: 3, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 35, Row: 3, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 43, Row: 4, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 44, Row: 4, Column: 8
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 52, Row: 5, Column: 7
      Discriminator: 23, Description: block (2, 3), Index: 53, Row: 5, Column: 8
   CellsWithMask:
      Discriminator: 23, Description: block (2, 3), Index: 42, Row: 4, Column: 6
      Discriminator: 23, Description: block (2, 3), Index: 51, Row: 5, Column: 6
}
{ Mask = 144, Description = row #4, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 28, Row: 3, Column: 1
      Discriminator: 3, Description: row #4, Index: 29, Row: 3, Column: 2
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 31, Row: 3, Column: 4
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
      Discriminator: 3, Description: row #4, Index: 33, Row: 3, Column: 6
      Discriminator: 3, Description: row #4, Index: 34, Row: 3, Column: 7
      Discriminator: 3, Description: row #4, Index: 35, Row: 3, Column: 8
   CellsWithMask:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
}
{ Mask = 144, Description = column #6, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 14, Description: column #6, Index: 5, Row: 0, Column: 5
      Discriminator: 14, Description: column #6, Index: 14, Row: 1, Column: 5
      Discriminator: 14, Description: column #6, Index: 23, Row: 2, Column: 5
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 50, Row: 5, Column: 5
      Discriminator: 14, Description: column #6, Index: 59, Row: 6, Column: 5
      Discriminator: 14, Description: column #6, Index: 68, Row: 7, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
}
{ Mask = 144, Description = block (2, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 31, Row: 3, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 40, Row: 4, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 48, Row: 5, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 49, Row: 5, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 50, Row: 5, Column: 5
   CellsWithMask:
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
}
{ Mask = 146, Description = row #5, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 37, Row: 4, Column: 1
      Discriminator: 4, Description: row #5, Index: 38, Row: 4, Column: 2
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 40, Row: 4, Column: 4
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
      Discriminator: 4, Description: row #5, Index: 43, Row: 4, Column: 7
      Discriminator: 4, Description: row #5, Index: 44, Row: 4, Column: 8
   CellsWithMask:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
}
{ Mask = 146, Description = column #1, Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 9, Description: column #1, Index: 0, Row: 0, Column: 0
      Discriminator: 9, Description: column #1, Index: 9, Row: 1, Column: 0
      Discriminator: 9, Description: column #1, Index: 18, Row: 2, Column: 0
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
      Discriminator: 9, Description: column #1, Index: 54, Row: 6, Column: 0
      Discriminator: 9, Description: column #1, Index: 63, Row: 7, Column: 0
      Discriminator: 9, Description: column #1, Index: 72, Row: 8, Column: 0
   CellsWithMask:
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
}
{ Mask = 146, Description = block (2, 1), Cells = 9, CellsWithMask = 3, CleanableCellsCount = 0
   Cells:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 28, Row: 3, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 29, Row: 3, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 37, Row: 4, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 38, Row: 4, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 46, Row: 5, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 47, Row: 5, Column: 2
   CellsWithMask:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
}

---------------------

Guessing that 2 and 5 are arbitrary in row #6 (multiple solutions): Pick 2->(6, 1), 5->(6, 7).
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|26.|731|
|.17|39.|.64|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094260731017390064263471589639742815785916423421583976

(5, 7) can only contain 2.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|26.|731|
|.17|39.|264|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094260731017390264263471589639742815785916423421583976


---------------------

{ Mask = 144, Description = row #4, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 28, Row: 3, Column: 1
      Discriminator: 3, Description: row #4, Index: 29, Row: 3, Column: 2
      Discriminator: 3, Description: row #4, Index: 30, Row: 3, Column: 3
      Discriminator: 3, Description: row #4, Index: 31, Row: 3, Column: 4
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
      Discriminator: 3, Description: row #4, Index: 33, Row: 3, Column: 6
      Discriminator: 3, Description: row #4, Index: 34, Row: 3, Column: 7
      Discriminator: 3, Description: row #4, Index: 35, Row: 3, Column: 8
   CellsWithMask:
      Discriminator: 3, Description: row #4, Index: 27, Row: 3, Column: 0
      Discriminator: 3, Description: row #4, Index: 32, Row: 3, Column: 5
}
{ Mask = 144, Description = row #5, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 37, Row: 4, Column: 1
      Discriminator: 4, Description: row #5, Index: 38, Row: 4, Column: 2
      Discriminator: 4, Description: row #5, Index: 39, Row: 4, Column: 3
      Discriminator: 4, Description: row #5, Index: 40, Row: 4, Column: 4
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
      Discriminator: 4, Description: row #5, Index: 42, Row: 4, Column: 6
      Discriminator: 4, Description: row #5, Index: 43, Row: 4, Column: 7
      Discriminator: 4, Description: row #5, Index: 44, Row: 4, Column: 8
   CellsWithMask:
      Discriminator: 4, Description: row #5, Index: 36, Row: 4, Column: 0
      Discriminator: 4, Description: row #5, Index: 41, Row: 4, Column: 5
}
{ Mask = 144, Description = column #1, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 9, Description: column #1, Index: 0, Row: 0, Column: 0
      Discriminator: 9, Description: column #1, Index: 9, Row: 1, Column: 0
      Discriminator: 9, Description: column #1, Index: 18, Row: 2, Column: 0
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
      Discriminator: 9, Description: column #1, Index: 45, Row: 5, Column: 0
      Discriminator: 9, Description: column #1, Index: 54, Row: 6, Column: 0
      Discriminator: 9, Description: column #1, Index: 63, Row: 7, Column: 0
      Discriminator: 9, Description: column #1, Index: 72, Row: 8, Column: 0
   CellsWithMask:
      Discriminator: 9, Description: column #1, Index: 27, Row: 3, Column: 0
      Discriminator: 9, Description: column #1, Index: 36, Row: 4, Column: 0
}
{ Mask = 144, Description = column #6, Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 14, Description: column #6, Index: 5, Row: 0, Column: 5
      Discriminator: 14, Description: column #6, Index: 14, Row: 1, Column: 5
      Discriminator: 14, Description: column #6, Index: 23, Row: 2, Column: 5
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
      Discriminator: 14, Description: column #6, Index: 50, Row: 5, Column: 5
      Discriminator: 14, Description: column #6, Index: 59, Row: 6, Column: 5
      Discriminator: 14, Description: column #6, Index: 68, Row: 7, Column: 5
      Discriminator: 14, Description: column #6, Index: 77, Row: 8, Column: 5
   CellsWithMask:
      Discriminator: 14, Description: column #6, Index: 32, Row: 3, Column: 5
      Discriminator: 14, Description: column #6, Index: 41, Row: 4, Column: 5
}
{ Mask = 144, Description = block (2, 1), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 28, Row: 3, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 29, Row: 3, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 37, Row: 4, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 38, Row: 4, Column: 2
      Discriminator: 21, Description: block (2, 1), Index: 45, Row: 5, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 46, Row: 5, Column: 1
      Discriminator: 21, Description: block (2, 1), Index: 47, Row: 5, Column: 2
   CellsWithMask:
      Discriminator: 21, Description: block (2, 1), Index: 27, Row: 3, Column: 0
      Discriminator: 21, Description: block (2, 1), Index: 36, Row: 4, Column: 0
}
{ Mask = 144, Description = block (2, 2), Cells = 9, CellsWithMask = 2, CleanableCellsCount = 0
   Cells:
      Discriminator: 22, Description: block (2, 2), Index: 30, Row: 3, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 31, Row: 3, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 39, Row: 4, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 40, Row: 4, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 48, Row: 5, Column: 3
      Discriminator: 22, Description: block (2, 2), Index: 49, Row: 5, Column: 4
      Discriminator: 22, Description: block (2, 2), Index: 50, Row: 5, Column: 5
   CellsWithMask:
      Discriminator: 22, Description: block (2, 2), Index: 32, Row: 3, Column: 5
      Discriminator: 22, Description: block (2, 2), Index: 41, Row: 4, Column: 5
}

---------------------

Guessing that 5 and 8 are arbitrary in column #6 (multiple solutions): Pick 8->(4, 6), 5->(5, 6).
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|268|731|
|.17|395|264|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094268731017395264263471589639742815785916423421583976

(5, 1) can only contain 8.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|.94|268|731|
|817|395|264|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392094268731817395264263471589639742815785916423421583976

(4, 1) can only contain 5.
+---+---+---+
|952|137|648|
|346|829|157|
|178|654|392|
+---+---+---+
|594|268|731|
|817|395|264|
|263|471|589|
+---+---+---+
|639|742|815|
|785|916|423|
|421|583|976|
+---+---+---+
Code: 952137648346829157178654392594268731817395264263471589639742815785916423421583976

